#!/usr/bin/python
# -*- coding: UTF-8 -*-
# Simulator for the boat position based on velocity and heading


import rospy
from std_msgs.msg import Float64, Float32, String
from sensor_msgs.msg import NavSatFix
import socket


class Client_tcp():
    def __init__(self):
        rospy.init_node("client_tcp", anonymous=True)

        rospy.Subscriber('heading', Float32, self.update_heading)
        self.heading = rospy.get_param("simulation/heading_init")
        rospy.Subscriber('goal_heading', Float32, self.update_goal_heading)
        self.goal_heading = 0
        rospy.Subscriber('wind_direction_apparent', Float64,
                         self.update_wind_direction)
        self.wind_direction_apparent = 0
        rospy.Subscriber('position', NavSatFix, self.update_position)
        self.latitude = 0
        self.longitude = 0
        rospy.Subscriber('sailing_state', String, self.update_sailing_state)
        self.sailing_state = 'normal'

        self.freq = rospy.get_param("config/rate")
        self.rate = rospy.Rate(self.freq)

        self.client_tcp_send()

    def update_heading(self, msg):
        self.heading = msg.data

    def update_goal_heading(self, msg):
        self.goal_heading = msg.data

    def update_wind_direction(self, msg):
        self.wind_direction_apparent = msg.data

    def update_position(self, msg):
        self.latitude = msg.latitude
        self.longitude = msg.longitude

    def update_sailing_state(self, msg):
        self.sailing_state = msg.data

    def client_tcp_send(self):
        #   创建套接字
        mySocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        #   设置ip和端口
        host = socket.gethostname()
        host = "47.107.161.103"
        port = 23336
        #   连接到服务器
        mySocket.connect((host, port))
        print("连接到服务器")
        # msg = NavSatFix()

        while not rospy.is_shutdown():

            msg_wangxuexi = str("0605") + " " + str(self.latitude) + ' ' \
                + str(self.longitude) + " " + str(self.heading)\
                + " " + str(self.goal_heading) + " " + \
                str(self.wind_direction_apparent) + " " + self.sailing_state\
                + " " + str("1011")
            try:
                mySocket.send(str(msg_wangxuexi))
            except KeyboardInterrupt:
                mySocket.send("over")
                mySocket.shutdown(2)
                mySocket.close()
                print("over")
                break

            self.rate.sleep()


if __name__ == '__main__':
    try:
        Client_tcp()
    except rospy.ROSInterruptException:
        pass
